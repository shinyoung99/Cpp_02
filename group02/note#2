# 객체지향프로그래밍 3주차 정리노트 <박찬윤, 안신영>

<박찬윤>

c언어를 잘 모르기 때문에 c++를 c언어로 바꾸는데 크게 어려움이 많았습니다.

코드를 이해하는데도 부족함이 있다고 느꼈고, 비주얼 스튜디오 설정에서도 어려움을 겪었습니다.

c언어를 멘토링에서 배웠는데 c++를 하려고 하니 헷갈린다. 

<안신영>

c를 조금 배웠음에도 불구하고 지금 쓰는 언어와 많이 헷갈리다보니 c++을 바꾸는데 어려움이 많았습니다.

vs code를 쓰다보니 남들과 다른 설정을 쓰다보니 시간도 많이 걸리고 설정을 잘못해서 컴파일이 안되는 경우도 많았습니다. 

c로 바꾸는데 출력 자체가 안되거나 에러가 많이 떴습니다. 코드를 잘못이해한 것 같다.

구현자체도 많이 어려움을 짝꿍이랑 겪고있습니다.

c++를 봤을 때의 코드를 봐도 이해를 못하고 있습니다. 

<질문>

왜 코드가 이렇게 되었을까?

검색을 해봤을 경우 출력은 되는 것을 확인했다. 그리고 또한 코드를 같이 이해했다.

```cpp
#include <stdio.h>

double area(int r); // 함수의 원형 선언

double area(int r) { // 함수 구현
    return 3.14 * r * r; // 반지름 r의 원면적 리턴
}

int main() {
    int n = 3;
    char c = '#';
    printf("%c %f-%d hello %d\n", c, 5.5, n, 1);
    printf("n + 5 = %d\n", n + 5);
    printf("면적은 %lf\n", area(n)); // 함수 area()의 리턴 값 출력
    return 0; // main 함수의 반환 값
}
```

버퍼의 개념이란 무엇일까?

→ 장치와 장치가 연결되는 공간에서 데이터를 원활하게 처리할 수 있게 만들어 주는 역할을 하는 것이 바로 버퍼입니다

true = 1 로 출력된다.

c++의 문법이 도대체 뭐가 다른가?

→ 편리함이 다 인것인가?

#include <cstring> → cstring을 쓰게 되면 꼭 써야하는 설정인가

while 반복문을 다른 언어와 헷갈리게 되어있나?

구조가 비슷한 것인가?

cout<<”암호>>”; 여기서는 왜 ? endl; 안썼나??

<정리>

std → c++에서는 이름 공간 중 하나이다. 접두어 사용

cin → cin 디스플레이 cout 키보드가 연결 되어있음

cin → 객체 

c++의 문자열 처리는 c-스트링, string 클래스 이용인데 string 클래스 이용 방식을 많이 쓰려고 함

using namespace std; → std를 쓰지 않고 받아올 수 있다.
